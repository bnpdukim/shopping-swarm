version: "3"
services:
  order:
    image: bnpdukim/order
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.arch == docker2
    ports:
      - "6000:6000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - shoppingnet
  product:
    image: bnpdukim/product
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.arch == docker2
    ports:
      - "6002:6002"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - shoppingnet
  user:
    image: bnpdukim/user
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.arch == docker2
    ports:
      - "6004:6004"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - shoppingnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: 
          - node.role == manager
    networks:
      - shoppingnet
  eureka:
    image: bnpdukim/eureka
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.arch == docker1
    ports:
      - "8761:8761"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - shoppingnet
networks:
  shoppingnet:
